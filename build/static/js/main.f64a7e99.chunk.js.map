{"version":3,"sources":["components/CICD.js","components/Pods.js","components/Dashboard.js","index.js"],"names":["CICD","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","getFromServer","axios","get","then","response","console","log","catch","error","putToServer","e","html","preventDefault","setState","state","react_default","a","createElement","Fragment","className","React","Component","Pods","componentDidMount","setInterval","fetchData","data","renderTable","objectSpread","ips","toConsumableArray","names","map","ip","index","onClick","killNode","concat","node","bind","assertThisInitialized","active","name","clearInterval","Dashboard","BrowserRouter","basename","process","Link","to","Route","exact","path","component","rootElement","document","getElementById","ReactDOM","render","Dashboard_Dashboard"],"mappings":"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","file":"static/js/main.f64a7e99.chunk.js","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\n\nexport default class CICD extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\thtml: \"\"\n\t\t};\n\t}\n\n\tgetFromServer = () => {\n\t\taxios\n\t\t\t.get(\"http://localhost:5000\")\n\t\t\t.then(response => {\n\t\t\t\tconsole.log({ response });\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tconsole.log({ error });\n\t\t\t});\n\t};\n\n\tputToServer = (e, html) => {\n\t\te.preventDefault();\n\n\t\tthis.setState({\n\t\t\thtml: html\n\t\t});\n\n\t\taxios\n\t\t\t.get(\"http://localhost:5000/update/\")\n\t\t\t.then(response => {\n\t\t\t\tconsole.log({ response });\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tconsole.log({ error });\n\t\t\t});\n\t};\n\trender() {\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<textarea />\n\t\t\t\t<button className=\"btn btn-lg btn-primary\">Add</button>\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n","import React from \"react\";\nimport axios from \"axios\";\n\nexport default class Pods extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.renderTable = this.renderTable.bind(this);\n\t\tthis.fetchData = this.fetchData.bind(this);\n\n\t\tthis.state = {\n\t\t\tactive: true,\n\t\t\tdata: {\n\t\t\t\tip: [\"10.56.0.27\", \"10.56.1.19\", \"10.56.0.26\", \"10.56.1.10\"],\n\t\t\t\tname: [\n\t\t\t\t\t\"app-orange-53dc4be6f62dd408be35406f2486247c-2rfqx\",\n\t\t\t\t\t\"app-orange-53dc4be6f62dd408be35406f2486247c-b7whc\",\n\t\t\t\t\t\"app-orange-53dc4be6f62dd408be35406f2486247c-z5r48\",\n\t\t\t\t\t\"database-cfwp8\"\n\t\t\t\t]\n\t\t\t}\n\t\t};\n\t}\n\n\tcomponentDidMount = () => {\n\t\t// setinterval(1000)\n\t\t// this.fetchData();\n\n\t\tsetInterval(this.fetchData, 1000);\n\t};\n\n\tcomponentWillUnmount() {\n\t\tclearInterval(this.fetchData);\n\t}\n\n\tfetchData = () => {\n\t\t// const data = null;\n\t\taxios\n\t\t\t.get(`http://localhost:5000/dashboard/`)\n\t\t\t.then(response => {\n\t\t\t\tconsole.log({ response });\n\t\t\t\tthis.setState({\n\t\t\t\t\tdata: response\n\t\t\t\t});\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tconsole.log({ error });\n\t\t\t});\n\t};\n\n\trenderTable = () => {\n\t\tconst data = { ...this.state.data };\n\t\tconsole.log({ data });\n\n\t\tconst ips = [...data[`ip`]];\n\t\tconst names = [...data[`name`]];\n\n\t\tconsole.log({ ips });\n\t\tconsole.log({ names });\n\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t{ips.map((ip, index) => (\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>{names[index]}</td>\n\t\t\t\t\t\t<td>{ip}</td>\n\t\t\t\t\t\t<td>statuss</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\tclassName=\"btn btn-md btn-danger\"\n\t\t\t\t\t\t\t\tonClick={e =>\n\t\t\t\t\t\t\t\t\tthis.killNode(e, `${names[index]}`)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tKill Instance\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t))}\n\t\t\t</React.Fragment>\n\t\t);\n\t};\n\n\tkillNode = (e, node) => {\n\t\te.preventDefault();\n\t\tconsole.log(\"delete\", node);\n\t\taxios\n\t\t\t.get(`http://localhost:5000/dashboard/delete/${node}`)\n\t\t\t.then(response => {\n\t\t\t\tconsole.log({ response });\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tconsole.log({ error });\n\t\t\t});\n\t};\n\tfetchData = () => {\n\t\taxios\n\t\t\t.get(\"http://35.237.161.200:5000/dashboard/\")\n\t\t\t.then(response => {\n\t\t\t\tconsole.log(response);\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tconsole.log(error);\n\t\t\t});\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<table className=\"table\">\n\t\t\t\t\t<thead>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<th>Name</th>\n\t\t\t\t\t\t\t<th>IP</th>\n\t\t\t\t\t\t\t<th>Status</th>\n\t\t\t\t\t\t\t<th>Action</th>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</thead>\n\n\t\t\t\t\t<tbody>{this.state.active && this.renderTable()}</tbody>\n\t\t\t\t</table>\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n","import React from \"react\";\n\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nimport CICD from \"./CICD\";\nimport Pods from \"./Pods\";\n\nexport default class Dashboard extends React.Component {\n\trender() {\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<div>Dashboard</div>\n\t\t\t\t{/* <Nav /> */}\n\t\t\t\t<Router basename={process.env.PUBLIC_URL}>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<Link to=\"/\">\n\t\t\t\t\t\t\t<h2>Pods</h2>\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t<Link to=\"/CI_CD\">\n\t\t\t\t\t\t\t<h2>CI-CD</h2>\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t<Route exact path=\"/\" component={Pods} />\n\t\t\t\t\t\t<Route exact path=\"/CI_CD\" component={CICD} />\n\t\t\t\t\t</div>\n\t\t\t\t</Router>\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport Dashboard from \"./components/Dashboard\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./styles.css\";\n\nfunction App() {\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<div className=\"App\">\n\t\t\t\t<Dashboard />\n\t\t\t</div>\n\t\t</React.Fragment>\n\t);\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}